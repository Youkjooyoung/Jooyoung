<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- =========================================================
    Mapper Name : ProductMapper
    Description : 상품 관련 CRUD + 검색 + 자동완성
    ========================================================= -->
<mapper namespace="ProductMapper">

  <!-- =========================================================
       1. ResultMap (공통)
       ========================================================= -->
  <resultMap id="product" type="com.model2.mvc.service.domain.Product">
    <id property="prodNo" column="PROD_NO"/>
    <result property="prodName" column="PROD_NAME"/>
    <result property="prodDetail" column="PROD_DETAIL"/>
    <result property="manuDate" column="MANUFACTURE_DAY"/>
    <result property="price" column="PRICE"/>
    <result property="fileName" column="IMAGE_FILE"/>
    <result property="regDate" column="REG_DATE"/>
    <result property="viewCount" column="VIEW_COUNT"/>
    <result property="stockQty" column="STOCK_QTY"/>
    <result property="availableQty" column="AVAILABLE_QTY"/>
    <result property="cancelReqCnt" column="CANCEL_REQ_CNT"/>
  </resultMap>

  <!-- =========================================================
       2. 공통 SQL 조각
       ========================================================= -->
	<sql id="Base_Columns">
		PROD_NO, PROD_NAME, PROD_DETAIL,
		MANUFACTURE_DAY,
		PRICE, IMAGE_FILE, REG_DATE, VIEW_COUNT, STOCK_QTY
	</sql>

	<!-- 검색 조건 where절 -->
	<sql id="Search_Conds">
	<if test="searchKeyword != null and searchKeyword != ''">
		<choose>
			<when test="searchCondition == 'prodName'">
				PROD_NAME LIKE '%' || #{searchKeyword} || '%'
			</when>
			<when test="searchCondition == 'prodDetail'">
				PROD_DETAIL LIKE '%' || #{searchKeyword} || '%'
			</when>
			<otherwise>
				(PROD_NAME LIKE '%' || #{searchKeyword} || '%'
				OR PROD_DETAIL LIKE '%' || #{searchKeyword} || '%')
			</otherwise>
		</choose>
	</if>

	<if test="minPrice != null and minPrice > 0">
		AND PRICE &gt;= #{minPrice}
	</if>
	<if test="maxPrice != null and maxPrice > 0">
		AND PRICE &lt;= #{maxPrice}
	</if>
</sql>

  <!-- =========================================================
       3. 단건 조회
       ========================================================= -->
  <select id="getProduct" parameterType="int" resultMap="product">
	SELECT
	p.PROD_NO, p.PROD_NAME, p.PROD_DETAIL, p.MANUFACTURE_DAY,
	p.PRICE, p.IMAGE_FILE, p.REG_DATE, p.VIEW_COUNT, p.STOCK_QTY,
	CASE WHEN p.STOCK_QTY &lt; 0 THEN 0 ELSE p.STOCK_QTY END AS AVAILABLE_QTY
	FROM PRODUCT p
	WHERE p.PROD_NO = #{prodNo}
</select>

  <!-- =========================================================
       4. 상품 등록 / 수정 / 삭제
       ========================================================= -->
  <insert id="addProduct" parameterType="product">
  <selectKey keyProperty="prodNo" resultType="int" order="BEFORE">
    SELECT SEQ_PRODUCT_PROD_NO.NEXTVAL FROM DUAL
  </selectKey>
  
  INSERT INTO PRODUCT
  (
    PROD_NO,
    PROD_NAME,
    PROD_DETAIL,
    MANUFACTURE_DAY,
    PRICE,
    IMAGE_FILE,
    REG_DATE,
    STOCK_QTY,
    VIEW_COUNT
  )
  VALUES
  (
    #{prodNo},
    #{prodName},
    #{prodDetail},
    #{manuDate},
    #{price},
    #{fileName, jdbcType=VARCHAR},
    SYSDATE,
    #{stockQty},
    0
  )
</insert>


<update id="updateProduct" parameterType="product">
    UPDATE PRODUCT
    <trim prefix="SET" suffixOverrides=",">
        REG_DATE = REG_DATE,
        <if test="prodName != null and prodName != ''">
            PROD_NAME = #{prodName},
        </if>
        <if test="prodDetail != null and prodDetail != ''">
            PROD_DETAIL = #{prodDetail},
        </if>
        <if test="manuDate != null and manuDate != ''">
            MANUFACTURE_DAY = #{manuDate},
        </if>
        <if test="price != null and price != ''">
            PRICE = #{price},
        </if>
        <if test="fileName != null and fileName != ''">
            IMAGE_FILE = #{fileName, jdbcType=VARCHAR},
        </if>
    </trim>
    WHERE PROD_NO = #{prodNo}
</update>

  <delete id="deleteProduct" parameterType="int">
	DELETE FROM PRODUCT WHERE PROD_NO = #{prodNo}
</delete>

  <!-- =========================================================
       5. 이미지 등록 / 삭제 / 조회
       ========================================================= -->
  <insert id="addProductImage" parameterType="productImage">
	<selectKey keyProperty="imgId" resultType="int"
		order="BEFORE">
		SELECT PRODUCT_IMG_SEQ.NEXTVAL FROM DUAL
	</selectKey>
	INSERT INTO PRODUCT_IMAGE (IMG_ID, PROD_NO, FILE_NAME)
	VALUES (#{imgId}, #{prodNo}, #{fileName})
</insert>

  <delete id="deleteProductImage" parameterType="int">
	DELETE FROM PRODUCT_IMAGE WHERE IMG_ID = #{imgId}
</delete>

  <select id="getProductImages" parameterType="int"
	resultType="productImage">
	SELECT IMG_ID AS imgId, PROD_NO AS prodNo, FILE_NAME AS fileName
	FROM PRODUCT_IMAGE
	WHERE PROD_NO = #{prodNo}
</select>

  <!-- =========================================================
       6. 상품 리스트 (페이징 + 검색 + 정렬)
       ========================================================= -->
  <select id="getProductList" parameterType="map"
	resultMap="product">
	SELECT * FROM (
	SELECT ROWNUM rnum, A.* FROM (
	SELECT
	p.PROD_NO, p.PROD_NAME, p.PROD_DETAIL, p.MANUFACTURE_DAY,
	p.PRICE, p.IMAGE_FILE, p.REG_DATE, p.VIEW_COUNT, p.STOCK_QTY,
	CASE WHEN p.STOCK_QTY &lt; 0 THEN 0 ELSE p.STOCK_QTY END AS AVAILABLE_QTY
	FROM PRODUCT p
	<where>
		<include refid="Search_Conds" />
	</where>
	<choose>
		<when test="sort == 'priceAsc'">ORDER BY p.PRICE ASC</when>
		<when test="sort == 'priceDesc'">ORDER BY p.PRICE DESC</when>
		<otherwise>ORDER BY p.PROD_NO DESC</otherwise>
	</choose>
	) A
	WHERE ROWNUM &lt;= #{endRowNum, jdbcType=INTEGER}
	)
	WHERE rnum &gt;= #{startRowNum, jdbcType=INTEGER}
</select>

  <!-- 총 건수 -->
<select id="getTotalCount"
	parameterType="com.model2.mvc.common.Search"
	resultType="int">
	SELECT COUNT(*) 
	FROM PRODUCT
	<where>
		1=1
		<if test="searchKeyword != null and searchKeyword != ''">
			<choose>
				<when test="searchCondition == 'prodName'">
					AND PROD_NAME LIKE '%' || #{searchKeyword} || '%'
				</when>
				<when test="searchCondition == 'prodDetail'">
					AND PROD_DETAIL LIKE '%' || #{searchKeyword} || '%'
				</when>
				<otherwise>
					AND (PROD_NAME LIKE '%' || #{searchKeyword} || '%' 
					OR PROD_DETAIL LIKE '%' || #{searchKeyword} || '%')
				</otherwise>
			</choose>
		</if>
		<if test="minPrice != null and minPrice > 0">
			AND PRICE &gt;= #{minPrice}
		</if>
		<if test="maxPrice != null and maxPrice > 0">
			AND PRICE &lt;= #{maxPrice}
		</if>
	</where>
</select>

  <!-- =========================================================
       7. 관리자용 상품 목록
       ========================================================= -->
<select id="getProductListForManage" resultMap="product"
	parameterType="map">
	SELECT * FROM (
	SELECT ROWNUM rnum, A.* FROM (
	SELECT
	p.PROD_NO,
	p.PROD_NAME,
	p.PROD_DETAIL,
	p.MANUFACTURE_DAY AS MANUFACTURE_DAY,
	p.PRICE,
	p.IMAGE_FILE,
	p.REG_DATE,
	p.VIEW_COUNT,
	p.STOCK_QTY,
	tx.BUYER_ID AS BUYER_ID,
	TO_CHAR(tx.ORDER_DATE,'YYYYMMDD') AS BUY_DATE,
	(
	SELECT COUNT(*)
	FROM TRANSACTION t4
	WHERE t4.PROD_NO = p.PROD_NO
	AND t4.TRAN_STATUS_CODE = '004'
	) AS CANCEL_REQ_CNT
	FROM PRODUCT p
	LEFT JOIN (
	SELECT PROD_NO, BUYER_ID, ORDER_DATE
	FROM (
	SELECT t.*,
	ROW_NUMBER() OVER (PARTITION BY t.PROD_NO ORDER BY t.ORDER_DATE DESC) rn
	FROM TRANSACTION t
	)
	WHERE rn = 1
	) tx ON tx.PROD_NO = p.PROD_NO
	ORDER BY p.PROD_NO DESC
	) A
	WHERE ROWNUM &lt;= #{endRowNum, jdbcType=INTEGER}
	)
	WHERE rnum &gt;= #{startRowNum, jdbcType=INTEGER}
</select>



  <!-- =========================================================
       8. 조회수 증가
       ========================================================= -->
  <update id="updateViewCount" parameterType="int">
	UPDATE PRODUCT
	SET VIEW_COUNT = VIEW_COUNT + 1
	WHERE PROD_NO = #{prodNo}
</update>

  <!-- =========================================================
       9. 자동완성 (상품명, 상세설명)
       ========================================================= -->
  <select id="suggestProductNames" parameterType="map"
	resultType="string">
	SELECT PROD_NAME
	FROM (
	SELECT PROD_NAME
	FROM PRODUCT
	WHERE (
	(LENGTH(#{keyword}) = 1 AND INSTR(LOWER(PROD_NAME), LOWER(#{keyword})) > 0)
	OR (LENGTH(#{keyword}) > 1 AND LOWER(PROD_NAME) LIKE LOWER(#{keyword}) ||
	'%')
	)
	ORDER BY TO_NUMBER(REGEXP_SUBSTR(PROD_NAME, '[0-9]+')) NULLS FIRST,
	PROD_NAME
	)
	WHERE ROWNUM &lt;= 10
</select>

  <select id="suggestProductDetails" parameterType="map"
	resultType="string">
	SELECT SUGG
	FROM (
	SELECT DISTINCT TRIM(SUBSTR(PROD_DETAIL, 1, 50)) AS SUGG
	FROM PRODUCT
	WHERE INSTR(LOWER(PROD_DETAIL), LOWER(#{keyword})) > 0
	ORDER BY SUGG
	)
	WHERE ROWNUM &lt;= 10
</select>

  <!-- =========================================================
       10. 재고 관리
       ========================================================= -->
  <update id="decreaseStock" parameterType="map">
	UPDATE PRODUCT
	SET STOCK_QTY = NVL(STOCK_QTY, 0) - #{qty}
	WHERE PROD_NO = #{prodNo}
	AND NVL(STOCK_QTY, 0) >= #{qty}
</update>

  <update id="increaseStock" parameterType="map">
	UPDATE PRODUCT
	SET STOCK_QTY = STOCK_QTY + #{qty}
	WHERE PROD_NO = #{prodNo}
</update>

</mapper>
