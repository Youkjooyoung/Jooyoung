<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.model2.mvc.service.user.UserDao">

	<!-- ========================================== -->
	<!-- ✅ ResultMap : 모든 컬럼 매핑 -->
	<!-- ========================================== -->
	<resultMap id="userSelectMap" type="user">
		<id property="userId" column="user_id" jdbcType="VARCHAR" />
		<result property="userName" column="user_name"
			jdbcType="VARCHAR" />
		<result property="password" column="password"
			jdbcType="VARCHAR" />
		<result property="role" column="role" jdbcType="VARCHAR" />
		<result property="ssn" column="ssn" jdbcType="VARCHAR" />
		<result property="phone" column="cell_phone" jdbcType="VARCHAR" />
		<result property="zipcode" column="zipcode" jdbcType="VARCHAR" />
		<result property="addr" column="addr" jdbcType="VARCHAR" />
		<result property="addrDetail" column="addr_detail"
			jdbcType="VARCHAR" />
		<result property="email" column="email" jdbcType="VARCHAR" />
		<result property="regDate" column="reg_date" jdbcType="DATE" />
		<result property="kakaoId" column="kakao_id" jdbcType="VARCHAR" />
		<result property="googleId" column="google_id"
			jdbcType="VARCHAR" />
		<result property="profileImg" column="profile_img"
			jdbcType="VARCHAR" />
	</resultMap>

	<!-- ========================================== -->
	<!-- ✅ INSERT : 회원가입 -->
	<!-- ========================================== -->
	<insert id="addUser" parameterType="user">
		INSERT INTO USERS (
		user_id, user_name, password, role, ssn, cell_phone, zipcode, addr,
		addr_detail,
		email, kakao_id, google_id, profile_img, reg_date
		) VALUES (
		#{userId}, #{userName}, #{password}, 'user',
		#{ssn, jdbcType=VARCHAR}, #{phone, jdbcType=VARCHAR},
		#{zipcode, jdbcType=VARCHAR}, #{addr, jdbcType=VARCHAR},
		#{addrDetail, jdbcType=VARCHAR}, #{email, jdbcType=VARCHAR},
		#{kakaoId, jdbcType=VARCHAR}, #{googleId, jdbcType=VARCHAR},
		#{profileImg, jdbcType=VARCHAR}, SYSDATE
		)
	</insert>

	<!-- ========================================== -->
	<!-- ✅ SELECT ONE -->
	<!-- ========================================== -->
	<select id="getUser" parameterType="string"
		resultMap="userSelectMap">
		SELECT * FROM USERS WHERE user_id = #{value}
	</select>

	<!-- ========================================== -->
	<!-- ✅ UPDATE : 기존 회원정보 수정 -->
	<!-- ========================================== -->
	<update id="updateUser" parameterType="user">
		UPDATE USERS
		<set>
			user_name = #{userName},
			cell_phone = #{phone},
			addr = #{addr},
			email = #{email}
		</set>
		WHERE user_id = #{userId}
	</update>

	<!-- ========================================== -->
	<!-- ✅ UPDATE : 회원정보 보완 (온보딩용) -->
	<!-- ========================================== -->
	<update id="updateUserProfile" parameterType="user">
		UPDATE USERS
		SET
		user_name = #{userName},
		cell_phone = #{phone},
		zipcode = #{zipcode},
		addr = #{addr},
		addr_detail = #{addrDetail},
		email = #{email}
		WHERE user_id = #{userId}
	</update>

	<!-- ========================================== -->
	<!-- ✅ SELECT LIST -->
	<!-- ========================================== -->
	<select id="getUserList" parameterType="search"
		resultMap="userSelectMap">
		SELECT *
		FROM (
		SELECT inner_table.*, ROWNUM AS row_seq
		FROM (
		SELECT user_id, user_name, email
		FROM USERS
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword != ''">
					user_id = #{searchKeyword}
				</if>
				<if test="searchCondition == 1 and searchKeyword != ''">
					user_name = #{searchKeyword}
				</if>
			</where>
		</if>
		ORDER BY user_id
		) inner_table
		WHERE ROWNUM <![CDATA[ <= ]]>
		#{endRowNum}
		)
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>

	<!-- ========================================== -->
	<!-- ✅ COUNT (for pagination) -->
	<!-- ========================================== -->
	<select id="getTotalCount" parameterType="search"
		resultType="int">
		SELECT COUNT(*)
		FROM (
		SELECT user_id, user_name, email
		FROM USERS
		<if test="searchCondition != null">
			<where>
				<if test="searchCondition == 0 and searchKeyword != ''">
					user_id = #{searchKeyword}
				</if>
				<if test="searchCondition == 1 and searchKeyword != ''">
					user_name = #{searchKeyword}
				</if>
			</where>
		</if>
		)
	</select>

	<!-- ========================================== -->
	<!-- ✅ SNS LOGIN : 카카오 / 구글 -->
	<!-- ========================================== -->
	<select id="getUserByKakaoId" parameterType="string"
		resultMap="userSelectMap">
		SELECT * FROM USERS WHERE kakao_id = #{kakaoId}
	</select>

	<select id="getUserByGoogleId" parameterType="string"
		resultMap="userSelectMap">
		SELECT * FROM USERS WHERE google_id = #{googleId}
	</select>

	<!-- ========================================== -->
	<!-- ✅ 이메일 중복확인 -->
	<!-- ========================================== -->
	<select id="countByEmail" resultType="int">
		SELECT COUNT(*)
		FROM USERS
		WHERE EMAIL = #{email}
		<if test="excludeUserId != null and excludeUserId != ''">
			AND USER_ID != #{excludeUserId}
		</if>
	</select>

	<!-- ========================================== -->
	<!-- ✅ 전화번호 중복확인 -->
	<!-- ========================================== -->
	<select id="countByPhone" resultType="int">
		SELECT COUNT(*)
		FROM USERS
		WHERE CELL_PHONE = #{phone}
		<if test="excludeUserId != null and excludeUserId != ''">
			AND USER_ID != #{excludeUserId}
		</if>
	</select>

</mapper>
