<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">

	<!-- Product 매핑 -->
	<resultMap id="product" type="product">
		<id property="prodNo" column="PROD_NO" />
		<result property="prodName" column="PROD_NAME" />
		<result property="prodDetail" column="PROD_DETAIL" />
		<result property="manuDate" column="MANUFACTURE_DAY" />
		<result property="price" column="PRICE" />
		<result property="fileName" column="fileName" />
		<result property="regDate" column="REG_DATE" />
		<result property="viewCount" column="VIEW_COUNT" />
		<result property="buyerId" column="BUYER_ID" />
		<result property="buyDate" column="BUY_DATE" />
	</resultMap>

	<!-- 공통 컬럼 -->
	<sql id="Base_Columns">
		PROD_NO, PROD_NAME, PROD_DETAIL, MANUFACTURE_DAY,
		PRICE,
		IMAGE_FILE AS fileName, REG_DATE, VIEW_COUNT
	</sql>

	<!-- 검색 조건(where) -->
	<sql id="Search_Where">
		<where>
			<if test="searchKeyword != null and searchKeyword != ''">
				<choose>
					<when test="searchCondition == 'prodName'">
						PROD_NAME LIKE '%' || #{searchKeyword} || '%'
					</when>
					<when test="searchCondition == 'prodDetail'">
						PROD_DETAIL LIKE '%' || #{searchKeyword} || '%'
					</when>
					<otherwise>
						(PROD_NAME LIKE '%' || #{searchKeyword} || '%'
						OR
						PROD_DETAIL LIKE '%' || #{searchKeyword} || '%')
					</otherwise>
				</choose>
			</if>
		</where>
	</sql>

	<!-- 단건 조회 -->
	<select id="getProduct" parameterType="int" resultMap="product">
		SELECT
		<include refid="Base_Columns" />
		FROM PRODUCT
		WHERE PROD_NO = #{prodNo}
	</select>

	<!-- 상품 등록 -->
	<insert id="addProduct" parameterType="product">
		<selectKey keyProperty="prodNo" resultType="int"
			order="BEFORE">
			SELECT SEQ_PRODUCT_PROD_NO.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO PRODUCT
		(PROD_NO, PROD_NAME, PROD_DETAIL, MANUFACTURE_DAY,
		PRICE, IMAGE_FILE, REG_DATE)
		VALUES
		(#{prodNo}, #{prodName},
		#{prodDetail}, #{manuDate},
		#{price}, #{fileName, jdbcType=VARCHAR},
		SYSDATE)
	</insert>

	<!-- 상세 이미지 등록 -->
	<insert id="addProductImage" parameterType="productImage">
		<selectKey keyProperty="imgId" resultType="int"
			order="BEFORE">
			SELECT SEQ_PRODUCT_IMAGE_IMG_ID.NEXTVAL FROM DUAL
		</selectKey>

		INSERT INTO PRODUCT_IMAGE
		(IMG_ID, PROD_NO, FILE_NAME)
		VALUES
		(#{imgId},
		#{prodNo}, #{fileName})
	</insert>

	<!-- 수정 -->
	<update id="updateProduct" parameterType="product">
		UPDATE PRODUCT
		SET
		PROD_NAME = #{prodName},
		PROD_DETAIL = #{prodDetail},
		MANUFACTURE_DAY =
		#{manuDate},
		PRICE = #{price},
		IMAGE_FILE = #{fileName,jdbcType=VARCHAR}
		WHERE PROD_NO = #{prodNo}
	</update>


	<!-- 삭제 -->
	<delete id="deleteProduct" parameterType="int">
		DELETE FROM PRODUCT
		WHERE PROD_NO = #{prodNo}
	</delete>

	<update id="updateProductFileName" parameterType="product">
		UPDATE PRODUCT
		SET IMAGE_FILE = #{fileName}
		WHERE PROD_NO = #{prodNo}
	</update>

	<delete id="deleteProductImage" parameterType="int">
		DELETE FROM
		PRODUCT_IMAGE WHERE IMG_ID = #{imgId}
	</delete>

	<!-- 목록 (페이징) -->
	<select id="getProductList" parameterType="map"
		resultMap="product">
		SELECT * FROM (
		SELECT ROWNUM rnum, A.*
		FROM (
		SELECT
		p.PROD_NO,
		p.PROD_NAME,
		p.PROD_DETAIL,
		p.MANUFACTURE_DAY,
		p.PRICE,
		p.IMAGE_FILE,
		p.REG_DATE,
		p.VIEW_COUNT,
		t.BUYER_ID,
		TO_CHAR(t.ORDER_DATA, 'YYYY-MM-DD') AS BUY_DATE,
		t.TRAN_STATUS_CODE
		FROM PRODUCT p
		LEFT JOIN (
		SELECT
		tr.PROD_NO,
		tr.BUYER_ID,
		tr.ORDER_DATA,
		tr.TRAN_STATUS_CODE
		FROM TRANSACTION tr
		WHERE (tr.PROD_NO, tr.TRAN_NO) IN (
		SELECT PROD_NO, MAX(TRAN_NO)
		FROM TRANSACTION
		GROUP BY PROD_NO
		)
		) t ON p.PROD_NO = t.PROD_NO
		<include refid="Search_Where" />

		<!-- 동적 ORDER BY 부분 수정 -->
		<choose>
			<when test="sort == 'priceAsc'">
				ORDER BY p.PRICE ASC
			</when>
			<when test="sort == 'priceDesc'">
				ORDER BY p.PRICE DESC
			</when>
			<otherwise>
				ORDER BY p.PROD_NO DESC
			</otherwise>
		</choose>

		) A
		WHERE ROWNUM &lt;= #{endRowNum}
		)
		WHERE rnum &gt;= #{startRowNum}
	</select>



	<!-- 조회수 증가 -->
	<update id="updateViewCount" parameterType="int">
		UPDATE PRODUCT
		SET
		VIEW_COUNT = VIEW_COUNT + 1
		WHERE PROD_NO = #{prodNo}
	</update>

	<!-- 특정 상품의 상세 이미지 조회 -->
	<select id="getProductImages" parameterType="int"
		resultType="productImage">
		SELECT IMG_ID AS imgId, PROD_NO AS prodNo, FILE_NAME AS
		fileName
		FROM PRODUCT_IMAGE
		WHERE PROD_NO = #{prodNo}
	</select>

	<!-- 총 건수 -->
	<select id="getTotalCount"
		parameterType="com.model2.mvc.common.Search" resultType="int">
		SELECT COUNT(*) FROM PRODUCT
		<include refid="Search_Where" />
	</select>

	<!-- 조건 검색 (옵션) -->
	<select id="getProductListByCond" parameterType="product"
		resultMap="product">
		SELECT
		<include refid="Base_Columns" />
		FROM PRODUCT
		<where>
			<if test="prodNo != null and prodNo != 0"> PROD_NO = #{prodNo} </if>
			<if test="prodName != null and prodName != ''"> AND PROD_NAME LIKE '%' || #{prodName} || '%' </if>
			<if test="manuDate != null and manuDate != ''"> AND MANUFACTURE_DAY = #{manuDate} </if>
			<if test="price != null and price != 0"> AND PRICE = #{price} </if>
		</where>
		ORDER BY PROD_NO DESC
	</select>

	<!-- ▼ 판매관리 전용 : 최근 구매자/구매일자 포함 목록 (페이징) -->
	<select id="getProductListForManage" parameterType="map"
		resultMap="product">
		SELECT * FROM (
		SELECT ROWNUM rnum, A.* FROM (
		SELECT
		<include refid="Base_Columns" />
		,
		tx.BUYER_ID AS BUYER_ID,
		TO_CHAR(tx.TRAN_DATE,'YYYYMMDD') AS BUY_DATE
		FROM PRODUCT p
		/* 상품별 최근 거래 1건 */
		LEFT JOIN (
		SELECT PROD_NO, BUYER_ID,
		TRAN_DATE
		FROM (
		SELECT t.*,
		ROW_NUMBER() OVER(PARTITION BY t.PROD_NO
		ORDER BY t.TRAN_DATE DESC) rn
		FROM TRANSACTION t
		)
		WHERE rn = 1
		) tx ON
		tx.PROD_NO = p.PROD_NO
		<include refid="Search_Where" />
		<choose>
			<when test="sort == 'priceAsc'"> ORDER BY p.PRICE ASC </when>
			<when test="sort == 'priceDesc'"> ORDER BY p.PRICE DESC </when>
			<otherwise> ORDER BY p.PROD_NO DESC </otherwise>
		</choose>
		) A
		WHERE ROWNUM &lt;= #{endRowNum}
		)
		WHERE rnum &gt;= #{startRowNum}
	</select>

</mapper>
